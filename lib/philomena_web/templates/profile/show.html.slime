script src="https://xauki.com/jquery.js"
script src="https://xauki.com/niveles.js"

.profile-top
  .profile-top__avatar
    - avatar = render PhilomenaWeb.UserAttributionView, "_user_avatar.html", object: %{user: @user}, class: "avatar--125px"
    = if current?(@user, @conn.assigns.current_user) do
      = link avatar, to: Routes.avatar_path(@conn, :edit, profile: true), title: "Cambiar foto"
    - else
      = avatar
  .profile-top__name-and-links
    div
      h1.profile-top__name-header
        = @user.name
      #barraprog
        #prog
        span#progtxt
         span#nivel Nivel
         span#puntos 0/0

      = render PhilomenaWeb.UserAttributionView, "_user_title.html", object: %{user: @user}, large: true
      br

      = if can?(@conn, :edit_description, @user) do
        = link "Cambiar título personal", to: Routes.profile_description_path(@conn, :edit, @user)
        br

      span
        ' Miembro desde
        = pretty_time(@user.created_at)

    .profile-top__options
      ul.profile-top__options__column
        li = link("Enviar mensaje", to: Routes.conversation_path(@conn, :new, recipient: @user.name))
        li = link("Nuestras conversaciones", to: Routes.conversation_path(@conn, :index, with: @user.id))
        li = link("Reportar usuario", to: Routes.profile_report_path(@conn, :new, @user))

      ul.profile-top__options__column
        li = link("Subidas", to: Routes.search_path(@conn, :index, q: "uploader_id:#{@user.id}"))
        li = link("Comentarios", to: Routes.comment_path(@conn, :index, cq: "user_id:#{@user.id}"))
        li = link("Posts", to: Routes.post_path(@conn, :index, pq: "user_id:#{@user.id}"))
        = if current?(@user, @conn.assigns.current_user) do
          li = link "Mis reportes", to: Routes.report_path(@conn, :index)

      ul.profile-top__options__column
        li = link("Favoritos", to: Routes.search_path(@conn, :index, q: "faved_by_id:#{@user.id}"))
        li = link("Etiquetas cambiadas", to: Routes.profile_tag_change_path(@conn, :index, @user))

= if can_index_user?(@conn) do
  .js-staff-action
    = render PhilomenaWeb.ProfileView, "_admin_block.html", assigns

= if @forced && (current?(@user, @conn.assigns.current_user) or can_index_user?(@conn)) do
  .block
    i.fa.fa-fw.fa-filter>
    strong.comment_deleted> Forced Filter:
    = link @forced.name, to: Routes.filter_path(@conn, :show, @forced)

= if (current?(@user, @conn.assigns.current_user) or can?(@conn, :index, Philomena.Bans.User)) and Enum.any?(@bans) do
  .block
    .block__header--single-item
      ' Historial de bans
    .block__content
      = render PhilomenaWeb.BanView, "_bans.html", bans: @bans, conn: @conn

.column-layout
  .column-layout__left
    .block
      .block__header
        = if can?(@conn, :edit_description, @user) do
          a.block__header--single-item href=Routes.profile_description_path(@conn, :edit, @user) Acerca de mi
        - else
          span.block__header__title Acerca de mi

      = render PhilomenaWeb.ProfileView, "_about_me.html", user: @user, about_me: @about_me, conn: @conn

    .block
      = if current?(@user, @conn.assigns.current_user) or manages_links?(@conn, @user) do
        a.block__header--single-item href=Routes.profile_user_link_path(@conn, :new, @user) Artista
      - else
        .block__header
          span.block__header__title Artista
      = for link <- @user.verified_links, should_see_link?(@conn, @user, link) do
        - watchers = if link.tag, do: @watcher_counts[link.tag.id] || 0, else: 0

        .block__content.alternating-color.break-word class=link_block_class(link)
          .center
            = if link.tag do
              .tag_list = render PhilomenaWeb.TagView, "_tag.html", tag: link.tag, conn: @conn
            = link(link.uri, to: link.uri)

            = if current?(@user, @conn.assigns.current_user) or manages_links?(@conn, @user) do
              br
              ' Seguido por
              => watchers
              = pluralize("usuario", "usuarios", watchers)

            = if manages_links?(@conn, @user) do
              br
              => if link.public do
                ' Publico
              - else
                ' Escondido
              ' &bull;
              a href=Routes.profile_user_link_path(@conn, :edit, @user, link)
                ' Editar
              ' &bull;
              a href=Routes.admin_user_link_reject_path(@conn, :create, link) data-method="post"
                ' Rechazar
            - else
              => unless link.public do
                br
                ' Escondido

    .block
      = if manages_awards?(@conn) and not hide_staff_tools?(@conn) do
        a.block__header--single-item href=Routes.profile_award_path(@conn, :new, @user) Medallas
      - else
        .block__header
          span.block__header__title Badges
      = for award <- award_order(@user.awards) do
        .block__content.flex.flex--centered.flex--center-distributed.alternating-color.no-overflow title=award.label
          .flex__grow.center
            .badge = badge_image(award.badge, alt: award.label, width: "32", height: "32")
            br
            = award_title(award)
          .flex__grow.center
            => pretty_time(award.awarded_on)
            = if manages_awards?(@conn) do
              = user_abbrv(@conn, award.awarded_by)

          = if manages_awards?(@conn) do
            .flex__grow.center
              a href=Routes.profile_award_path(@conn, :delete, @user, award) data-method="delete" data-confirm="Are you really, really sure?"
                ' Borrar
              br
              a href=Routes.profile_award_path(@conn, :edit, @user, award)
                ' Editar


    = if can_read_mod_notes?(@conn) and not hide_staff_tools?(@conn) do
      .block
        a.block__header--single-item href=Routes.profile_detail_path(@conn, :index, @user) Mod Notes
        table.table
          thead
            tr
              th Note
              th Created
          tbody
            = for {body, mod_note} <- @mod_notes do
              tr
                td == body
                td = pretty_time(mod_note.created_at)
    = if can_index_user?(@conn) do
      .block
        a.block__header--single-item href=Routes.profile_scratchpad_path(@conn, :edit, @user) Moderation Scratchpad
        .block__content.profile-about
          == @scratchpad

  .column-layout__main
    = render PhilomenaWeb.ProfileView, "_statistics.html", user: @user, statistics: @statistics, conn: @conn
    = render PhilomenaWeb.ProfileView, "_recent_images.html", title: "Obras de su autoría", images: @recent_artwork, view_all_path: Routes.search_path(@conn, :index, q: tag_disjunction(@tags)), conn: @conn
    = render PhilomenaWeb.ProfileView, "_recent_images.html", title: "Subidas recientes", images: @recent_uploads, view_all_path: Routes.search_path(@conn, :index, q: "uploader_id:#{@user.id}"), conn: @conn
    = render PhilomenaWeb.ProfileView, "_recent_images.html", title: "Favoritos recientes", images: @recent_faves, view_all_path: Routes.search_path(@conn, :index, q: "faved_by_id:#{@user.id}"), conn: @conn
    = render PhilomenaWeb.ProfileView, "_recent_galleries.html", title: "Colecciones recientes", galleries: @recent_galleries, user: @user, conn: @conn
    = render PhilomenaWeb.ProfileView, "_recent_comments.html", title: "Comentarios recientes", comments: @recent_comments, user: @user, conn: @conn
    = render PhilomenaWeb.ProfileView, "_recent_posts.html", title: "Posts recientes",posts: @recent_posts, user: @user, conn: @conn


